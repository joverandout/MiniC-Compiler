program      := extern_list globals_list decl_list
	            | globals_list decl_list
globals_list := global globals_list | epsilon
global       := param ";"
extern_list  := extern extern_list'
extern_list' := extern extern_list'
	            | epsilon
extern       := "extern" type_spec IDENT "(" params ")" ";"
decl_list    := decl decl_list'
decl_list'   := decl decl_list'
	            | epsilon
decl         := var_decl
		        | fun_decl
var_decl     := var_type IDENT ";"
type_spec    := "void" | var_type
params       := param_list
	            | "void"
	            | epsilon
param_list   := param param_list'
param_list'  := "," param param_list'
	            | epsilon
param        := var_type IDENT
var_type     := "int"
	            | "float"
	            | "bool"
stmt         := expr_stmt
	            | block
	            | if_stmt
	            | while_stmt
	            | return_stmt
return_stmt  := "return" ";"
	            | "return" expr ";"
if_stmt      := "if" "(" expr ")" block else_stmt
else_stmt    := "else" block
	            | epsilon
while_stmt   := "while" "(" expr ")" stmt
block        := "{" local_decls stmt_list "}"
local_decls  := local_decl local_decls
	            | epsilon
local_decl   := param ";"
stmt_list    := stmt stmt_list
	            | epsilon
expr_stmt    := expr ";"
	            | ";"
rval         := term rval'
rval'        := "||" term rval'
	            | epsilon
term         := equivalence term'
term'        := && equivalence term' 
                | epsilon
equivalence  :=	relational equivalence'
equivalence' := "==" relational equivalence' 
                | "!=" relational equivalence'
                | epsilon
relational   := subexpr relational'
relational'  := "<=" subexpr relational'
                | "<" subexpr relational'
                | ">=" subexpr relational'
                | ">"subexpr relational'
             	| epsilon
subexpr      := factor subexpr'
subexpr'     := "+" factor subexpr'
	            | "-" factor subexpr'
	            | epsilon
factor	     := element factor'
factor'      := "*" element factor'
                | "/" element factor'
                | "%" element factor'
		        | epsilon
element      := "-" element
		        | "!" element
		        | "(" expr ")"
		        | IDENT 
		        | IDENT "(" args ")" 
		        | INT_LIT
				| FLOAT_LIT
		        | BOOL_LIT
args         := arg_list
				| epsilon
arg_list     := expr arg_list'
arg_list'    := "," expr arg_list'
				| epsilon